library(icenReg)
# PO model
po = ic_sp(cbind(l, u) ~ x1 + x2, data = simData, model = "po")
# Simulating data
simData = simIC_weib()
# PO model
po = ic_sp(cbind(l, u) ~ x1 + x2, data = simData, model = "po")
# PH model
ph_fit = ic_sp(cbind(l,u) ~ x1 + x2, data = simData, model = "ph")
coef(po_fit)
coef(ph_fit)
po_fit = ic_sp(cbind(l, u) ~ x1 + x2, data = simData, model = "po")
# PH model
ph_fit = ic_sp(cbind(l,u) ~ x1 + x2, data = simData, model = "ph")
coef(po_fit)
coef(ph_fit)
# But predictions are still nearly identical
new_data = data.frame(x1 = c(1,-1), x2 = c(1,-1) )
predict(po_fit, new_data)
predict(po_fit, new_data, type = 'response')
predict(ph_fit, new_data, type = 'response')
?mapply
?vapply
?apply
?sapply
args(sapply)
fxn = function(x) x + 1:3
fxn(1)
sapply(1:3, fxn)
sapply(3:1, fxn)
?vapply(list, function, FUN.VALUE = type, ...)
df = data.frame(x = 1)
is(df)
args(getFitEsts)
library(icenReg)
getFitEsts
library(icenReg)
# Fitting semi-parametric model
data(miceData)
fit = ic_sp(cbind(l,u) ~ grp, data = miceData)
new_data = data.frame(grp = c("ce", "ge"))
rownames(new_data) = c("ce_group", "ge_group")
# Problems:
predict(fit)
getFitEsts(fit, new_data[1,], p = c(.25, .5, .75))
# Problems:
predict(fit, newdata = new_data)
library(icenReg)
# Fitting semi-parametric model
data(miceData)
fit = ic_sp(cbind(l,u) ~ grp, data = miceData)
new_data = data.frame(grp = c("ce", "ge"))
rownames(new_data) = c("ce_group", "ge_group")
# Problems:
predict(fit, newdata = new_data)
getFitEsts(fit, new_data[1,], p = c(.25, .5, .75))
data("IR_diabetes")
head(IR_diabetes)
fit = ic_sp(cbind(left, right) ~ gender)
fit = ic_sp(cbind(left, right) ~ gender, data = IR_diabetes)
diag_baseline(fit)
diag_covar(fit)
getFitEsts
get_etas = icenReg:::get_etas
get_etas(fit)
install.packages("ICcforest")
library(icenReg)
library(ICcforest)
?sbrier_IC
data(miceData)
## Model fit for a semi-parametric model with icenReg::ic_sp()
pred <- icenReg::ic_sp(formula = Surv(l, u, type = "interval2") ~ 1, data = miceData)
# Integrated Brier score up to the largest endpoints of all censoring intervals in the dataset
sbrier_IC(obj, pred, type = "IBS")
obj <- Surv(miceData$l, miceData$u, type = "interval2")
## Model fit for a semi-parametric model with icenReg::ic_sp()
pred <- icenReg::ic_sp(formula = Surv(l, u, type = "interval2") ~ 1, data = miceData)
# Integrated Brier score up to the largest endpoints of all censoring intervals in the dataset
sbrier_IC(obj, pred, type = "IBS")
traceback()
debug(sbrier_IC)
## Model fit for a semi-parametric model with icenReg::ic_sp()
pred <- icenReg::ic_sp(formula = Surv(l, u, type = "interval2") ~ 1, data = miceData)
# Integrated Brier score up to the largest endpoints of all censoring intervals in the dataset
sbrier_IC(obj, pred, type = "IBS")
getFitEsts_Surv(Curve = pred, teval = time)
getFitEsts_Surv
debug(getFitEsts_Surv)
getFitEsts_Surv(Curve = pred, teval = time)
getFitEstsN
debug(getFitEstsN)
getFitEstsN(Curve, q = teval)
newdata
getFitEsts(fit, p = .05)
newdata
getFitEsts(fit, newdata = newdata)
newdata
getFitEsts
library(icenReg)
library(ICcforest)
?sbrier_IC
## Model fit for a semi-parametric model with icenReg::ic_sp()
pred <- icenReg::ic_sp(formula = Surv(l, u, type = "interval2") ~ 1, data = miceData)
# Integrated Brier score up to the largest endpoints of all censoring intervals in the dataset
sbrier_IC(obj, pred, type = "IBS")
devtools::install_github("https://github.com/pistacliffcho/LatentChannelNetworks.R",
subdir = "R/latChanNet")
