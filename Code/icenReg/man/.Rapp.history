simdata <- simIC_weib(n = 500, b1 = .3, b2 = -.3,#
                         inspections = 6, inspectLength = 1)#
	fit <- ic_par(Surv(l, u, type = 'interval2') ~ x1 + x2,#
                  data = simdata)#
	new_data <- data.frame(x1 = c(1,2), x2 = c(-1,1))#
	rownames(new_data) <- c('grp1', 'grp2')#
	estQ <- getFitEsts(fit, new_data, p = c(.25, .5, .75))
estP <- getFitEsts(miceFit, q = 400)
simdata <- simIC_weib(n = 500, b1 = .3, b2 = -.3,#
                         inspections = 6, inspectLength = 1)#
	fit <- ic_par(Surv(l, u, type = 'interval2') ~ x1 + x2,#
                  data = simdata)#
	new_data <- data.frame(x1 = c(1,2), x2 = c(-1,1))#
	rownames(new_data) <- c('grp1', 'grp2')#
	estQ <- getFitEsts(fit, new_data, p = c(.25, .5, .75))#
	estP <- getFitEsts(fit, q = 400)
library(icenReg)
load('~/Dropbox/Bioinformatics/Users/cliff/edger_results/strataAnalysis.RData')
ls()
ls(lrt.Pos_T1vT2)
ls(lrt.AADDT1_vs_PSpos)
ls(lrt.AADDT1_vs_PSpos$table)
myObj <- lrt.AADDT1_vs_PSpos
plot(log(myObj$table$PValue), log(myObj$dispersion))
ls(myObj$dispersion)
plot(log(myObj$table$PValue), log(myObj$dispersion), xlab = 'log p value', ylab = 'log dispersion')
plot(log(myObj$dispersion), log(myObj$table$PValue), xlab = 'log dispersion', ylab = 'log pvalue')
myObj <- lrt.PSposVsAADDGivenTime
myObj <- lrt.AADD_T1vT2
plot(log(myObj$dispersion), log(myObj$table$PValue), xlab = 'log dispersion', ylab = 'log pvalue')
hist(myObj$table$PValue)
myObj <- lrt.PSnegT1vsPSposT1
hist(myObj$table$PValue)
mean(myObj$table$PValue = 1)
mean(myObj$table$PValue == 1)
mean(myObj$table$PValue >.9)
myObj <- lrt.PSpos_T1vT2
hist(myObj$table$PValue)
length(myObj$table$PValue)
plot(log(myObj$dispersion), log(myObj$table$PValue), xlab = 'log dispersion', ylab = 'log pvalue')
ls(myObj)
ls(myObj$coef)
ls(myObj$coefficients)
str(myObj)
plot(log(myObj$table$PValue), myObj$table$logFC)
plot(log(myObj$table$PValue), myObj$table$logFC, xlim = c(-20, 1))
ls()
myObj_post1t2
myObj_post1t2 <- myObj
base_posneg <- lrt.PSnegT1vsPSposT1
plot(log(base_posneg$table$PValue), base_posneg$table$logFC)
weirdInds <- which(log(bas_posneg$table$PValue) < -5 & base_posneg$table$logFC > 2)
weirdInds <- which(log(base_posneg$table$PValue) < -5 & base_posneg$table$logFC > 2)
weirdInds
ls()
nrow(allData)
nrow(allDat)
dim(allDat)
length(base_posneg$table$PValue)
length(myObj_post1t2)
length(myObj_post1t2$table$PValue)
ls(base_posneg)
str(base_posneg$table)
length(names(base_posneg$table$PValue))
str(base_posneg$samples)
str(base_posneg$fitted.values)
test <- dimnames(base_posneg$fitted.values)
test[1:5,1:5]
test[1:5]
allDat[3,]
allDat[2,]
weirdInd
weirdInds
test <- dimnames(base_posneg$fitted.values)[4076]
test
test <- dimnames(base_posneg$fitted.values)[[1]][4076]
test
weirdInd <- as.numeric(test)
weirdData <- allDat[weirdInd,]
weirdData
dim(weirdData)
wd2 <- weirdData[,-(1:6)]
wd2
grpName <- gsub('[^0-9]', '',colnames(wd2))
grpName
colnames(wd2)
grpName <- gsub('\\d', '', colnames(wd2))
grpName
grpFact <- factor(grpName)
boxplot(wd2 ~ grpFact)
boxplot(wd2[1,] ~ grpFact)
is(wd2)
boxplot(as.numeric(wd2) ~ grpFact)
ls()
ls(base_posneg)
summary(base_posneg$fitted.values)
ls(base_posneg)
ls(base_posneg$table)
plot(base_posneg$table$logCPM.PSnegT1vsPSposT1, log(base_posneg$table$PValue.PSnegT1vsPSposT1))
dim(allDat)
?mcapply
??mcapply
mcapply
?apply
counts <- rowSums(allDat)
is(allDat)
allDatMat <- as.matrix(allData)
allDatMat <- as.matrix(allDat)
fullCounts <- rowSums(allDatMat)
is(allDatMat)
is.numeric(allDatMat)
allDatNums <- allDat[,-(1:6)]
fullCounts <- rowSums(allDatNums)
hist(fullCounts)
hist(log(fullCounts + 1) )
mean(fullCounts > 20)
mean(fullCounts > 50)
mean(fullCounts > 100)
mean(fullCounts > 108)
mean(fullCounts > 200)
validInd <- fullCounts > 216
mean(validInd)
orgValsInds <- dimnames(base_posneg$fitted.values)[[1]]
orgValsInds <- as.numeric(dimnames(base_posneg$fitted.values)[[1]])
subset_valid <- validInd[orgValsInds]
mean(subset_valid)
p_values <- base_posneg$table$PValues
boxplot(log(p_value) ~ subset_valid)
boxplot(log(p_values) ~ subset_valid)
summary(p_values)
ls(base_posneg)
ls(base_posneg$table)
p_values <- base_posneg$table$PValue.PSnegT1vsPSposT1
boxplot(log(p_values) ~ subset_valid)
subset_counts <- fullCounts[orgValsInds]
plot(subset_counts, log(p_values))
plot(log(subset_counts), log(p_values))
exp(10)
exp(15)
exp(5)
subset_pvals <- base_posneg$table[,5]
subset_pvals <- base_posneg$table[[5]]
subset_pvals <- base_posneg$table$PValue.PSnegT1vsPSposT1
subset_adj <- p.adjust(subset_pvals, method = 'BH')
sum(subset_adj < 0.05)
.99^1000
.999^1000
.995^1000
.996^1000
.997^1000
.9975^1000
.9972^1000
.9971^1000
.99705^1000
.99704^1000
.99703^1000
.99702^1000
.99701^1000
.997001^1000
.997005^1000
.9970055^1000
rawMiceData <- read.csv('~/Dropbox/Cliff (1)/CliffsProjects/TranslationalTests/miceData.csv')#
source('~/Dropbox/Cliff (1)/CliffsProjects/TranslationalTests/translational functions.R', chdir = TRUE)#
procData <- rawMiceData
rawProbeData <- read.csv('~/Dropbox/Cliff (1)/CliffsProjects/TranslationalTests/probeData.csv')
summary(rawProbeData)
summary(procData)
dropName <- 'Strain Comp.'#
procData <- procData[procData[['Cohort.Name']] != dropName, ]
summary(procData)
nrow(rawProbeData)
nrow(procData)
keep <- procData$Mouse. %in% rawProbeData$Mouse.
summary(keep)
procData <- procData[keep]
procData <- procData[keep,]
newOrd <- order(procData$Mouse.)
sortProcData <- procData[newOrd,]
newOrd2 <- order(rawProbData$Mouse.)
newOrd2 <- order(rawProbeData$Mouse.)
sortProbeData <- rawProbeData[newOrd2,]
head(sortProcData)
head(sortProbeData)
combineData <- cbind(sortProbeData, sortProcData)
latencyScore <- fullRankProcessing(combineData, latencyNames, weights = 1:12)
names(procData)[7:17] <-  paste('LATENCY', sep = "_", 2:12)#
names(procData)[18:29] <- paste('mDISTANCE', sep = '_', 1:12)#
names(procData)[30:41] <- paste('SPEED', sep = '_', 1:12)#
names(procData)[42:53] <- paste("mCSE", sep = '_', 1:12)#
#
latencyNames  	<- 	paste('LATENCY', sep = "_", 1:12)#
distanceNames 	<- 	paste('mDISTANCE', sep = '_', 1:12)#
speedNames 	  	<- 	paste('SPEED', sep = '_', 1:12)#
mCSE			<-	paste('mCSE', sep = '_', 1:12)
rawProbeData <- read.csv('~/Dropbox/Cliff (1)/CliffsProjects/TranslationalTests/probeData.csv')#
keep <- procData$Mouse. %in% rawProbeData$Mouse.#
procData <- procData[keep,]#
#
newOrd <- order(procData$Mouse.)#
sortProcData <- procData[newOrd,]#
#
newOrd2 <- order(rawProbeData$Mouse.)#
sortProbeData <- rawProbeData[newOrd2,]#
#
combineData <- cbind(sortProbeData, sortProcData)#
#
latencyScore <- fullRankProcessing(combineData, latencyNames, weights = 1:12)
plot(combineData$Mean.Proximity.to.Target, latencyScore)
names(combineData)
plot(combineData$X..Time.in.Target.Quadrant, latencyScore)
plot(combineData$Latency.to.Target, latencyScore)
plot(combineData$Latency.to.Target, combineData$X..Time.in.Target.Quadrant)
cor(combineData$X..Time.in.Target.Quadrant, latencyScore)
cor(combineData$Latency.to.Target, latencyScore)
distanceScore <- fullRankProcessing(combineData, distanceNames, weights = 1:12)
cor(combineData$Latency.to.Target, distanceScore)
?cor
summary(lm(distanceScore ~ combineData$Latency.to.Target))
rankProx <- rank(combineData$Mean.Proximity.to.Target, ties.method = 'average')
rankQuadTime <- rank(combineData$X..Time.in.Target.Quadrant, ties.method = 'average')
rankLatency <- rank(combineData$Latency.to.Target, ties.method = 'average')
compScore <- rankProx - rankQuadTime - rankLatency
plot(latencyScore, compScore)
plot(distanceScore, compScore)
plot(latencyScore, rankLatency)
plot(distanceScore, rankProx)
lm(compScore ~ distanceScore)
summary(lm(compScore ~ distanceScore))
summary(lm(compScore ~ latencyScore))
summary(lm(rankProx ~ latencyScore))
summary(lm(rankProx ~ distanceScore))
cseScore <- fullRankProcessing(combineData, mCSE, weights = 1:12)
scoresData <- data.frame(prbProx = combineData$Mean.Proximity.to.Target,#
						 quadTimeProx = combineData$X..Time.in.Target.Quadrant,#
						 prbLatency = combineData$Latency.to.Target,#
						 latencyRS = latencyScore,#
						 distanceRS = distanceScore,#
						 cseRS = cseScore)
cor(scoresData)
cor(scoresData)
names(combineData)
summary(combineData$hAPP)
summary(combineData[,5] == combineData[,15])
summary(combineData[,5])
summary(combineData[,15])
summary( (combineData[,5] == '-') == (combineData[,15] == 'neg'))
sort(rawProbeData$Mouse.)
sort(procData$Mouse.)
rawProbeData[, c('Mouse.', 'hAPP')]
procData[, c('Mouse.', 'hAPP')]
badMice <-  which((combineData[,5] == '-') == (combineData[,15] == 'neg'))
badMice
badMice <-  which((combineData[,5] == '-') != (combineData[,15] == 'neg'))
badMice
combineData[badMice, c(5, 15)]
ls(combinData)
ls(combineData)
combineData[badMice, c(5, 15, 44)]
colnames(combineData)
combineData[badMice, c(5, 15, 44, 3, 12)]
combineData[badMice, c(5, 15, 3, 12)]
combineData$Mouse.[badMice]
badInds <- which(combineData[,5] != combineData[,15])
badInds <- which((combineData[,5] == 'pos') != (combineData[,15] == '+') )
badInds
badInds <- which((combineData[,5] == '+') != (combineData[,15] == 'pos') )
badInds
combineData$Mouse.[badInds]
subScoreData <- scoresData[-badInds,]
cor(subScoreData)
library(lme4)#
rawMiceData <- read.csv('~/Dropbox/Cliff (1)/CliffsProjects/TranslationalTests/miceData.csv')#
source('~/Dropbox/Cliff (1)/CliffsProjects/TranslationalTests/translational functions.R', chdir = TRUE)
rawProbeData <- read.csv('~/Dropbox/Cliff (1)/CliffsProjects/TranslationalTests/probeData.csv')#
keep <- procData$Mouse. %in% rawProbeData$Mouse.
summary(keep)
library(lme4)#
rawMiceData <- read.csv('~/Dropbox/Cliff (1)/CliffsProjects/TranslationalTests/miceData.csv')#
source('~/Dropbox/Cliff (1)/CliffsProjects/TranslationalTests/translational functions.R', chdir = TRUE)#
procData <- rawMiceData
rawProbeData <- read.csv('~/Dropbox/Cliff (1)/CliffsProjects/TranslationalTests/probeData.csv')#
keep <- procData$Mouse. %in% rawProbeData$Mouse.#
procData <- procData[keep,]
summary(keep)
newOrd <- order(procData$Mouse.)#
sortProcData <- procData[newOrd,]#
#
newOrd2 <- order(rawProbeData$Mouse.)#
sortProbeData <- rawProbeData[newOrd2,]#
#
combineData <- cbind(sortProbeData, sortProcData)
summary(combineData)
colnames(combineData)
badInds <- which((combineData[,5] == '+') != (combineData[,15] == 'pos') )
badInds
newOrd <- order(procData$Mouse.)#
sortProcData <- procData[newOrd,]#
#
newOrd2 <- order(rawProbeData$Mouse.)#
sortProbeData <- rawProbeData[newOrd2,]#
#
combineData <- cbind(sortProbeData, sortProcData)
badInds <- which((combineData[,5] == '+') != (combineData[,15] == 'pos') )
badInds
combineData$Mouse.[badInds]
rawProbeData <- read.csv('~/Dropbox/Cliff (1)/CliffsProjects/TranslationalTests/probeData.csv')
newOrd <- order(procData$Mouse.)#
sortProcData <- procData[newOrd,]#
#
newOrd2 <- order(rawProbeData$Mouse.)#
sortProbeData <- rawProbeData[newOrd2,]#
#
combineData <- cbind(sortProbeData, sortProcData)
combineData[badInds, c(5,15)]
load('~/Dropbox/Cliff (1)/CliffsProjects/Srinath_Fluctuater/srinath.RData')
ls()
ls()
