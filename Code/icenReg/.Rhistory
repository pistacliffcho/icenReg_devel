data = weak_data,
model = "po", dist = "gamma",
logPriorFxn = logPriorFunction,
controls = bayesControls(useMLE_start = F))
plot(weakData_fit$mcmcList)
# Chunk 22
diag_baseline(cbind(left, right) ~ gender,
model = "po",
data = IR_diabetes,
dists = c("exponential", "weibull",
"loglogistic", "gamma"),
lgdLocation = "topright")
# Chunk 23
diag_baseline(fit_po, lgdLocation = "topright",
dists = c("exponential", "weibull",
"loglogistic", "gamma")
)
# Chunk 24
diag_covar(fit_po, lgdLocation = "topright",
main = "Checking Proportional Odds")
diag_covar(fit_ph, lgdLocation = "topright",
main = "Checking Proportional Hazards")
# Chunk 25
diag_covar(fit_po, lgdLocation = "topright",
main = "Checking Proportional Odds")
# Chunk 26
diag_covar(fit_ph, lgdLocation = "topright",
main = "Checking Proportional Hazards")
warnings()
debug(icenReg:::lines.icenReg_fit)
plot(weakData_fit)
argList
evalPoints
p_eval
cis_est
plot(informPrior_fit, newdata)
debug(icenReg:::plot.icenReg_fit)
plot(informPrior_fit, newdata)
argList
surv_est
newLinesList
library(icenReg)
arg(icenReg:::plot.icenReg_fit)
args(icenReg:::plot.icenReg_fit)
survCIs(weakData_fit)
# Chunk 1
library(icenReg)
# Chunk 2
data(miceData)
head(miceData, 3)
# Chunk 3
np_fit = ic_np(cbind(l, u) ~ grp, data = miceData)
# Chunk 4
groupedFit1 <- ic_np(cbind(l,u) ~ 0, data = miceData)
groupedFit2 <- ic_np(miceData[,c('l', 'u')])
# Chunk 5
plot(np_fit, col = c('blue', 'orange'),
xlab = 'Time', ylab = 'Estimated Survival')
# Chunk 6
data("IR_diabetes")
head(IR_diabetes, 3)
# Chunk 7
fit_ph <- ic_sp(cbind(left, right) ~ gender, model = 'ph',
bs_samples = 100, data = IR_diabetes)
fit_po <- ic_sp(cbind(left, right) ~ gender, model = 'po',
bs_samples = 100, data = IR_diabetes)
# Chunk 8
fit_po
fit_ph
# Chunk 9
newdata <- data.frame(gender = c('male', 'female') )
rownames(newdata) <- c('males', 'females')
plot(fit_po, newdata)
# Chunk 10
fit_po_gamma <- ic_par(cbind(left, right) ~ gender,
data = IR_diabetes, model = "po", dist = "gamma")
# Chunk 11
fit_po_gamma
# Chunk 12
plot(fit_po_gamma, newdata, lgdLocation = "topright")
# Chunk 13
flatPrior_fit <- ic_bayes(cbind(left, right) ~ gender,
data = IR_diabetes, model = "po", dist = "gamma")
# Chunk 14
flatPrior_fit
# Chunk 15
head(flatPrior_fit$samples)
# Chunk 16
# Accessing the first few samples of the first chain
head(flatPrior_fit$mcmcList[[1]])
# Accessing the first few samples of the second chain
head(flatPrior_fit$mcmcList[[2]])
# Chunk 17
head(flatPrior_fit$logPosteriorDensities[[1]])
# Chunk 18
plot(flatPrior_fit, newdata,
main = 'MAP Estimates')
# Chunk 19
plot(flatPrior_fit, newdata,
main = 'MAP Estimates',
evalPoints = 200)
# Default number of evaluations is 40.
# We may want more to get a slightly smoother plot!
# Chunk 20
plot(flatPrior_fit$mcmcList)
# Chunk 21
logPriorFunction <- function(x){
ans <- 0
ans <- ans + dnorm(x[1], sd = 0.1, log = T)
# Tight prior about 1st parameter, log_shape
ans <- ans + dnorm(x[2], sd = 10, log = T)
# Diffuse prior about 2nd parameter, log_scale
ans <- ans + dnorm(x[3], sd = 0.1, log = T)
# Tight prior about 3rd parameter, regression parameter
return(ans)
}
informPrior_fit <- ic_bayes(cbind(left, right) ~ gender,
data = IR_diabetes, model = "po", dist = "gamma",
logPriorFxn = logPriorFunction)
# Fitting model with prior.
informPrior_fit
# Chunk 22
weak_data <- IR_diabetes[1:2,]
weakData_fit <- ic_bayes(cbind(left, right) ~ gender,
data = weak_data,
model = "po", dist = "gamma",
logPriorFxn = logPriorFunction,
controls = bayesControls(useMLE_start = F))
plot(weakData_fit$mcmcList,
evalPoints = 200)
# Chunk 23
diag_baseline(cbind(left, right) ~ gender,
model = "po",
data = IR_diabetes,
dists = c("exponential", "weibull",
"loglogistic", "gamma"),
lgdLocation = "topright")
# Chunk 24
diag_baseline(fit_po, lgdLocation = "topright",
dists = c("exponential", "weibull",
"loglogistic", "gamma")
)
# Chunk 25
diag_covar(fit_po, lgdLocation = "topright",
main = "Checking Proportional Odds")
diag_covar(fit_ph, lgdLocation = "topright",
main = "Checking Proportional Hazards")
# Chunk 26
diag_covar(fit_po, lgdLocation = "topright",
main = "Checking Proportional Odds")
# Chunk 27
diag_covar(fit_ph, lgdLocation = "topright",
main = "Checking Proportional Hazards")
warnings()
traceback()
# Chunk 1
library(icenReg)
# Chunk 2
data(miceData)
head(miceData, 3)
# Chunk 3
np_fit = ic_np(cbind(l, u) ~ grp, data = miceData)
# Chunk 4
groupedFit1 <- ic_np(cbind(l,u) ~ 0, data = miceData)
groupedFit2 <- ic_np(miceData[,c('l', 'u')])
# Chunk 5
plot(np_fit, col = c('blue', 'orange'),
xlab = 'Time', ylab = 'Estimated Survival')
# Chunk 6
data("IR_diabetes")
head(IR_diabetes, 3)
# Chunk 7
fit_ph <- ic_sp(cbind(left, right) ~ gender, model = 'ph',
bs_samples = 100, data = IR_diabetes)
fit_po <- ic_sp(cbind(left, right) ~ gender, model = 'po',
bs_samples = 100, data = IR_diabetes)
# Chunk 8
fit_po
fit_ph
# Chunk 9
newdata <- data.frame(gender = c('male', 'female') )
rownames(newdata) <- c('males', 'females')
plot(fit_po, newdata)
# Chunk 10
fit_po_gamma <- ic_par(cbind(left, right) ~ gender,
data = IR_diabetes, model = "po", dist = "gamma")
# Chunk 11
fit_po_gamma
# Chunk 12
plot(fit_po_gamma, newdata, lgdLocation = "topright")
# Chunk 13
flatPrior_fit <- ic_bayes(cbind(left, right) ~ gender,
data = IR_diabetes, model = "po", dist = "gamma")
# Chunk 14
flatPrior_fit
# Chunk 15
head(flatPrior_fit$samples)
# Chunk 16
# Accessing the first few samples of the first chain
head(flatPrior_fit$mcmcList[[1]])
# Accessing the first few samples of the second chain
head(flatPrior_fit$mcmcList[[2]])
# Chunk 17
head(flatPrior_fit$logPosteriorDensities[[1]])
# Chunk 18
plot(flatPrior_fit, newdata,
main = 'MAP Estimates')
# Chunk 19
plot(flatPrior_fit, newdata,
main = 'MAP Estimates',
evalPoints = 200)
# Default number of evaluations is 40.
# We may want more to get a slightly smoother plot!
# Chunk 20
plot(flatPrior_fit$mcmcList)
# Chunk 21
logPriorFunction <- function(x){
ans <- 0
ans <- ans + dnorm(x[1], sd = 0.1, log = T)
# Tight prior about 1st parameter, log_shape
ans <- ans + dnorm(x[2], sd = 10, log = T)
# Diffuse prior about 2nd parameter, log_scale
ans <- ans + dnorm(x[3], sd = 0.1, log = T)
# Tight prior about 3rd parameter, regression parameter
return(ans)
}
informPrior_fit <- ic_bayes(cbind(left, right) ~ gender,
data = IR_diabetes, model = "po", dist = "gamma",
logPriorFxn = logPriorFunction)
# Fitting model with prior.
informPrior_fit
# Chunk 22
weak_data <- IR_diabetes[1:2,]
weakData_fit <- ic_bayes(cbind(left, right) ~ gender,
data = weak_data,
model = "po", dist = "gamma",
logPriorFxn = logPriorFunction,
controls = bayesControls(useMLE_start = F))
plot(weakData_fit$mcmcList,
evalPoints = 200)
# Chunk 23
diag_baseline(cbind(left, right) ~ gender,
model = "po",
data = IR_diabetes,
dists = c("exponential", "weibull",
"loglogistic", "gamma"),
lgdLocation = "topright")
# Chunk 24
diag_baseline(fit_po, lgdLocation = "topright",
dists = c("exponential", "weibull",
"loglogistic", "gamma")
)
# Chunk 25
diag_covar(fit_po, lgdLocation = "topright",
main = "Checking Proportional Odds")
diag_covar(fit_ph, lgdLocation = "topright",
main = "Checking Proportional Hazards")
# Chunk 26
diag_covar(fit_po, lgdLocation = "topright",
main = "Checking Proportional Odds")
# Chunk 27
diag_covar(fit_ph, lgdLocation = "topright",
main = "Checking Proportional Hazards")
# Chunk 1
library(icenReg)
# Chunk 2
data(miceData)
head(miceData, 3)
# Chunk 3
np_fit = ic_np(cbind(l, u) ~ grp, data = miceData)
# Chunk 4
groupedFit1 <- ic_np(cbind(l,u) ~ 0, data = miceData)
groupedFit2 <- ic_np(miceData[,c('l', 'u')])
# Chunk 5
plot(np_fit, col = c('blue', 'orange'),
xlab = 'Time', ylab = 'Estimated Survival')
# Chunk 6
data("IR_diabetes")
head(IR_diabetes, 3)
# Chunk 7
fit_ph <- ic_sp(cbind(left, right) ~ gender, model = 'ph',
bs_samples = 100, data = IR_diabetes)
fit_po <- ic_sp(cbind(left, right) ~ gender, model = 'po',
bs_samples = 100, data = IR_diabetes)
# Chunk 8
fit_po
fit_ph
# Chunk 9
newdata <- data.frame(gender = c('male', 'female') )
rownames(newdata) <- c('males', 'females')
plot(fit_po, newdata)
# Chunk 10
fit_po_gamma <- ic_par(cbind(left, right) ~ gender,
data = IR_diabetes, model = "po", dist = "gamma")
# Chunk 11
fit_po_gamma
# Chunk 12
plot(fit_po_gamma, newdata, lgdLocation = "topright")
# Chunk 13
flatPrior_fit <- ic_bayes(cbind(left, right) ~ gender,
data = IR_diabetes, model = "po", dist = "gamma")
# Chunk 14
flatPrior_fit
# Chunk 15
head(flatPrior_fit$samples)
# Chunk 16
# Accessing the first few samples of the first chain
head(flatPrior_fit$mcmcList[[1]])
# Accessing the first few samples of the second chain
head(flatPrior_fit$mcmcList[[2]])
# Chunk 17
head(flatPrior_fit$logPosteriorDensities[[1]])
# Chunk 18
plot(flatPrior_fit, newdata,
main = 'MAP Estimates')
# Chunk 19
plot(flatPrior_fit, newdata,
main = 'MAP Estimates',
evalPoints = 200)
# Default number of evaluations is 40.
# We may want more to get a slightly smoother plot!
# Chunk 20
plot(flatPrior_fit$mcmcList)
# Chunk 21
logPriorFunction <- function(x){
ans <- 0
ans <- ans + dnorm(x[1], sd = 0.1, log = T)
# Tight prior about 1st parameter, log_shape
ans <- ans + dnorm(x[2], sd = 10, log = T)
# Diffuse prior about 2nd parameter, log_scale
ans <- ans + dnorm(x[3], sd = 0.1, log = T)
# Tight prior about 3rd parameter, regression parameter
return(ans)
}
informPrior_fit <- ic_bayes(cbind(left, right) ~ gender,
data = IR_diabetes, model = "po", dist = "gamma",
logPriorFxn = logPriorFunction)
# Fitting model with prior.
informPrior_fit
# Chunk 22
weak_data <- IR_diabetes[1:2,]
weakData_fit <- ic_bayes(cbind(left, right) ~ gender,
data = weak_data,
model = "po", dist = "gamma",
logPriorFxn = logPriorFunction,
controls = bayesControls(useMLE_start = F))
plot(weakData_fit$mcmcList,
evalPoints = 200)
# Chunk 23
diag_baseline(cbind(left, right) ~ gender,
model = "po",
data = IR_diabetes,
dists = c("exponential", "weibull",
"loglogistic", "gamma"),
lgdLocation = "topright")
# Chunk 24
diag_baseline(fit_po, lgdLocation = "topright",
dists = c("exponential", "weibull",
"loglogistic", "gamma")
)
# Chunk 25
diag_covar(fit_po, lgdLocation = "topright",
main = "Checking Proportional Odds")
diag_covar(fit_ph, lgdLocation = "topright",
main = "Checking Proportional Hazards")
# Chunk 26
diag_covar(fit_po, lgdLocation = "topright",
main = "Checking Proportional Odds")
# Chunk 27
diag_covar(fit_ph, lgdLocation = "topright",
main = "Checking Proportional Hazards")
warnings()
library(devtools)
document()
# Chunk 1
library(icenReg)
# Chunk 2
data(miceData)
head(miceData, 3)
# Chunk 3
np_fit = ic_np(cbind(l, u) ~ grp, data = miceData)
# Chunk 4
groupedFit1 <- ic_np(cbind(l,u) ~ 0, data = miceData)
groupedFit2 <- ic_np(miceData[,c('l', 'u')])
# Chunk 5
plot(np_fit, col = c('blue', 'orange'),
xlab = 'Time', ylab = 'Estimated Survival')
# Chunk 6
data("IR_diabetes")
head(IR_diabetes, 3)
# Chunk 7
fit_ph <- ic_sp(cbind(left, right) ~ gender, model = 'ph',
bs_samples = 100, data = IR_diabetes)
fit_po <- ic_sp(cbind(left, right) ~ gender, model = 'po',
bs_samples = 100, data = IR_diabetes)
# Chunk 8
fit_po
fit_ph
# Chunk 9
newdata <- data.frame(gender = c('male', 'female') )
rownames(newdata) <- c('males', 'females')
plot(fit_po, newdata)
# Chunk 10
fit_po_gamma <- ic_par(cbind(left, right) ~ gender,
data = IR_diabetes, model = "po", dist = "gamma")
# Chunk 11
fit_po_gamma
# Chunk 12
plot(fit_po_gamma, newdata, lgdLocation = "topright")
# Chunk 13
flatPrior_fit <- ic_bayes(cbind(left, right) ~ gender,
data = IR_diabetes, model = "po", dist = "gamma")
# Chunk 14
flatPrior_fit
# Chunk 15
head(flatPrior_fit$samples)
# Chunk 16
# Accessing the first few samples of the first chain
head(flatPrior_fit$mcmcList[[1]])
# Accessing the first few samples of the second chain
head(flatPrior_fit$mcmcList[[2]])
# Chunk 17
head(flatPrior_fit$logPosteriorDensities[[1]])
# Chunk 18
plot(flatPrior_fit, newdata,
main = 'MAP Estimates')
# Chunk 19
plot(flatPrior_fit, newdata,
main = 'MAP Estimates',
evalPoints = 200)
# Default number of evaluations is 40.
# We may want more to get a slightly smoother plot!
# Chunk 20
plot(flatPrior_fit$mcmcList)
# Chunk 21
logPriorFunction <- function(x){
ans <- 0
ans <- ans + dnorm(x[1], sd = 0.1, log = T)
# Tight prior about 1st parameter, log_shape
ans <- ans + dnorm(x[2], sd = 10, log = T)
# Diffuse prior about 2nd parameter, log_scale
ans <- ans + dnorm(x[3], sd = 0.1, log = T)
# Tight prior about 3rd parameter, regression parameter
return(ans)
}
informPrior_fit <- ic_bayes(cbind(left, right) ~ gender,
data = IR_diabetes, model = "po", dist = "gamma",
logPriorFxn = logPriorFunction)
# Fitting model with prior.
informPrior_fit
# Chunk 22
weak_data <- IR_diabetes[1:2,]
weakData_fit <- ic_bayes(cbind(left, right) ~ gender,
data = weak_data,
model = "po", dist = "gamma",
logPriorFxn = logPriorFunction,
controls = bayesControls(useMLE_start = F))
plot(weakData_fit$mcmcList,
evalPoints = 200)
# Chunk 23
diag_baseline(cbind(left, right) ~ gender,
model = "po",
data = IR_diabetes,
dists = c("exponential", "weibull",
"loglogistic", "gamma"),
lgdLocation = "topright")
# Chunk 24
diag_baseline(fit_po, lgdLocation = "topright",
dists = c("exponential", "weibull",
"loglogistic", "gamma")
)
# Chunk 25
diag_covar(fit_po, lgdLocation = "topright",
main = "Checking Proportional Odds")
diag_covar(fit_ph, lgdLocation = "topright",
main = "Checking Proportional Hazards")
# Chunk 26
diag_covar(fit_po, lgdLocation = "topright",
main = "Checking Proportional Odds")
# Chunk 27
diag_covar(fit_ph, lgdLocation = "topright",
main = "Checking Proportional Hazards")
debug(plot.icenReg_fit)
plot(weakData_fit$mcmcList,
evalPoints = 200)
plot.icenReg_fit(weakData_fit$mcmcList,
evalPoints = 200)
argList
plot.icenReg_fit(weakData_fit$mcmcList,
evalPoints = 200)
argList
addList
argList
firstPlotList
plot.icenReg_fit(weakData_fit$mcmcList,
evalPoints = 200)
plot(weakData_fit)
ranges
firstPlotList
firstPlotList
debug(lines.icenReg_fit)
argList
argList
argList
debug(lines.surv_cis)
list(...)
include_cis
debug(x$all_lines)
argList
argList
plot(informPrior_fit)
warnings()
