install.packages("RcppParallel")
library(latChanNet)
library(igraph)
library(RcppParallel)
setThreadOptions(2)
pm <- cbind( c(.1, .01), c(.01, .5) )
g <- sample_sbm(5000, pref.matrix=pm, block.sizes=c(30,70) * 50)
el = as_edgelist(g)
mod = makeLCN(el)
mod$llk()
system.time( emLCN(mod, 10) )
mod$llk()
system.time( emLCN(mod, 10, use_par = T) )
mod$llk()
library(latChanNet)
library(igraph)
library(RcppParallel)
setThreadOptions(3)
pm <- cbind( c(.1, .01), c(.01, .5) )
g <- sample_sbm(5000, pref.matrix=pm, block.sizes=c(30,70) * 50)
el = as_edgelist(g)
mod = makeLCN(el)
mod$llk()
system.time( emLCN(mod, 10) )
mod$llk()
system.time( emLCN(mod, 10, use_par = T) )
mod$llk()
library(latChanNet)
library(igraph)
library(RcppParallel)
setThreadOptions(2)
pm <- cbind( c(.1, .01), c(.01, .5) )
g <- sample_sbm(5000, pref.matrix=pm, block.sizes=c(30,70) * 50)
el = as_edgelist(g)
mod = makeLCN(el)
mod$llk()
system.time( emLCN(mod, 10) )
mod$llk()
system.time( emLCN(mod, 10, use_par = T) )
mod$llk()
defaultNumThreads()
?defaultNumThreads
system.time( emLCN(mod, 10) )
system.time( emLCN(mod, 10, use_par = T) )
mod$llk()
system.time( emLCN(mod, 100) )
mod$llk()
system.time( emLCN(mod, 100, use_par = T) )
mod$llk()
setThreadOptions(3)
mod = makeLCN(el)
mod$llk()
system.time( emLCN(mod, 100) )
mod$llk()
system.time( emLCN(mod, 100, use_par = T) )
mod$llk()
setThreadOptions(4)
system.time( emLCN(mod, 100, use_par = T) )
mod$llk()
system.time( emLCN(mod, 100) )
mod$llk()
system.time( emLCN(mod, 100, use_par = T) )
mod$llk()
system.time( emLCN(mod, 100, use_par = T) )
mod$llk()
system.time( emLCN(mod, 100, use_par = T) )
mod$llk()
system.time( emLCN(mod, 100, use_par = T) )
mod$llk()
system.time( emLCN(mod, 100, use_par = T) )
mod$llk()
system.time( emLCN(mod, 100) )
system.time( emLCN(mod, 100, use_par = T) )
library(latChanNet)
library(igraph)
library(RcppParallel)
setThreadOptions(4)
pm <- cbind( c(.1, .01), c(.01, .5) )
g <- sample_sbm(5000, pref.matrix=pm, block.sizes=c(30,70) * 50)
el = as_edgelist(g)
mod = makeLCN(el)
mod$llk()
system.time( emLCN(mod, 100) )
mod$llk()
system.time( emLCN(mod, 100, use_par = T) )
mod$llk()
system.time( emLCN(mod, 100, use_par = T) )
mod$llk()
grp = c(rep(1, 1500, 3500))
heatmapLCN(mod, grp)
grp = c(rep(1, 1500), rep(2,3500))
heatmapLCN(mod, grp)
pm <- cbind( c(.1, .01), c(.01, .5) )
g <- sample_sbm(50000, pref.matrix=pm, block.sizes=c(30,70) * 500)
grp = c(rep(1, 15000), rep(2,35000))
el = as_edgelist(g)
mod = makeLCN(el)
mod$llk()
system.time( emLCN(mod, 10) )
mod$llk()
system.time( emLCN(mod, 10, use_par = T) )
setThreadOptions(2)
system.time( emLCN(mod, 10, use_par = T) )
## Unit tests for plotting
library(icenReg)
data(miceData)
fit_bayes <- ic_bayes(cbind(l, u) ~ grp, data = miceData)
fit_np    <- ic_np(cbind(l, u) ~ grp, data = miceData)
fit_par   <- ic_par(cbind(l, u) ~ grp, data = miceData)
fit_sp    <- ic_sp(cbind(l, u) ~ grp, data = miceData)
fit_list <- list(bayes = fit_bayes,
np = fit_np,
par = fit_par,
sp = fit_sp)
newdata = data.frame(grp = 'ce')
newdata2 = data.frame(grp = c('ce', 'ge'))
rownames(newdata2)  = c("Conventional Env", "Germ Free Env")
cols = c("orange", "purple")
for(i in seq_along(fit_list)){
cat("Fit Type: ", names(fit_list)[i], '\n')
this_fit <- fit_list[[i]]
plot(this_fit, main = "No Data Provided Plot")
plot(this_fit, newdata = newdata, main = "Single Row Provided")
plot(this_fit, newdata = newdata2,
col = cols, main = "Two Rows Provided")
}
np_fits = ic_np(cbind(l, u) ~ grp, data = miceData)
plot(np_fits, main = "With Legend")
plot(np_fits, plot_legend = F, main = "Without Legend")
plot(np_fits, fun = "cdf", main = "CDF")
for(i in seq_along(fit_list)){
this_type = names(fit_list)[i]
this_fit = fit_list[[i]]
plot(this_fit, fun = "cdf",
main = paste("CDF for", this_type) )
plot(this_fit, newdata = newdata2, fun = "cdf",
main = paste("CDF for", this_type) )
}
setwd("~/Desktop/icenReg_devel/Code/icenReg")
library(devtools)
document()
strsplit("1 2", " ")
split_list = strsplit("1 2", " ")
as.numeric(split_list[[1]])
args(sort)
sum(numeric())
x = 1:3
x[-1:2]
x[-(1:2)]
?readLines
Inf < 1
Inf < Inf
lst = list(1,2,3,4)
lst
c(lst[[1:3]])
strsplit("cat", "")
sort(strsplit("cat","")[[1]])
3 %% 2
paste0(c("a", "b", "c"))
paste0(c("a", "b", "c"), sep = "")
?paste0
paste0(c("a", "b", "c"), collapse = "")
"a" < "b"
480/13.2
between = 1.6
width = 8.5
cat("For 42 inch frame")
for(i in 0:4){
mid = width/2 + between + i * (width + between)
cat("i:", i, "point:", mid, "\n")
}
cat("For 45 inch frame")
between = 2.2
for(i in 0:4){
mid = width/2 + between + i * (width + between)
cat("i:", i, "point:", mid, "\n")
}
between = 1.6
width = 8.5
cat("For 42 inch frame")
for(i in 1:4){
mid = width/2 + between + (i-1) * (width + between)
cat("i:", i, "point:", mid, "\n")
}
cat("For 45 inch frame")
between = 2.2
for(i in 0:4){
mid = width/2 + between + i * (width + between)
cat("i:", i, "point:", mid, "\n")
}
between = 1.6
width = 8.5
cat("For 42 inch frame")
for(i in 1:4){
mid = width/2 + between + (i-1) * (width + between)
cat("i:", i, "point:", mid, "\n")
}
cat("For 45 inch frame")
between = 2.2
for(i in 0:4){
mid = width/2 + between + (i-1) * (width + between)
cat("i:", i, "point:", mid, "\n")
}
between = 1.6
width = 8.5
cat("For 42 inch frame")
for(i in 1:4){
mid = width/2 + between + (i-1) * (width + between)
cat("i:", i, "point:", mid, "\n")
}
cat("For 45 inch frame")
between = 2.2
for(i in 1:4){
mid = width/2 + between + (i-1) * (width + between)
cat("i:", i, "point:", mid, "\n")
}
between = 1.6
width = 8.5
compute_points = function(nPoints = 4, width, between){
for(i in 1:4){
mid = width/2 + between + (i-1) * (width + between)
cat("i:", i, "point:", mid, "\n")
}
}
cat("For 42 inch frame")
compute_points(4, between = 1.6, width = 8.5)
cat("For 45 inch frame")
compute_points(4, between = 2.2, width = 8.5)
between = 1.6
width = 8.5
compute_points = function(nPoints = 4, width, between){
for(i in 1:4){
mid = width/2 + between + (i-1) * (width + between)
cat("i:", i, "point:", mid, "\n")
}
}
cat("For 42 inch frame\n")
compute_points(4, between = 1.6, width = 8.5)
cat("For 45 inch frame\n")
compute_points(4, between = 2.2, width = 8.5)
4000/28
200 * 29 * 52
