}
mean(pvals_lr < 0.05)
mean(pvals_wt < 0.05)
MC = 10000
for(i in 1:MC){
simData <- simIC_weib(b1 = 0.5, inspections = 1)
pvals_wt[i] <- waldTest(simData)
pvals_lr[i] <- lrTest(simData)
}
mean(pvals_lr < 0.05)
mean(pvals_wt < 0.05)
MC = 1000
for(i in 1:MC){
simData <- simIC_weib(b1 = 0, inspections = 1, n = 30)
pvals_lr[i] <- lrTest(simData)
pvals_wt[i] <- waldTest(simData)
}
mean(pvals_lr < 0.05)
mean(pvals_wt < 0.05)
MC = 1000
for(i in 1:MC){
simData <- simIC_weib(b1 = 0, inspections = 1, n = 30)
pvals_lr[i] <- lrTest(simData)
pvals_wt[i] <- waldTest(simData)
}
mean(pvals_lr < 0.05)
mean(pvals_wt < 0.05)
MC = 1000
for(i in 1:MC){
simData <- simIC_weib(b1 = 0, inspections = 1, n = 40)
pvals_lr[i] <- lrTest(simData)
pvals_wt[i] <- waldTest(simData)
}
mean(pvals_lr < 0.05)
mean(pvals_wt < 0.05)
pvals_lr <- numeric()
pvals_wt <- numeric()
MC = 1000
for(i in 1:MC){
simData <- simIC_weib(b1 = 0, inspections = 1, n = 40)
pvals_lr[i] <- lrTest(simData)
pvals_wt[i] <- waldTest(simData)
}
mean(pvals_lr < 0.05)
mean(pvals_wt < 0.05)
args(mean)
MC = 1000
for(i in 1:MC){
simData <- simIC_weib(b1 = 0, inspections = 1, n = 40)
pvals_lr[i] <- lrTest(simData)
pvals_wt[i] <- waldTest(simData)
}
mean(pvals_lr < 0.05)
mean(pvals_wt < 0.05)
library(icenReg)
simIC_weib
args(qweibull)
?ic_par
args(do.call)
?do.call
args(simEventTIme)
args(simEventTime)
library(icenREg)
library(icenReg)
args(icenReg:::simEventTime)
library(icenReg)
args(icenReg:::simEventTime)
library(roxygen2)
?"roxygenize"
?simIC_weib
?roxygenize
setwd("~/Desktop/icenReg_devel/Code/icenReg copy")
args(roxygenize)
?roxygenize
roxygenize(roclets = 'rd')
roxygenize(roclets = 'rd')
library(icenReg)
simData <- icenReg:::simCS_weib()
fit <- ic_par(cbind(l, u) ~ x1 + x2, data = simData)
summary(simData)
library(icenReg)
simData <- simCS_weib()
fit <- ic_par(cbind(l, u) ~ x1 + x2, data = simData)
summary(fit)
getwd()
setwd("~/Desktop/icenReg_devel/Code/icenReg copy")
roxygenize(roclets = 'rd')
library(roxygen2)
roxygenize(roclets = 'rd')
library(icenReg)
?simCS_weib
simData <- simCS_weib()
fit <- ic_par(cbind(l, u) ~ x1 + x2, data = simData)
summary(fit)
simData <- simCS_weib()
fit <- ic_par(cbind(l, u) ~ x1 + x2, data = simData)
summary(fit)
simData <- simCS_weib()
fit <- ic_par(cbind(l, u) ~ x1 + x2, data = simData)
summary(fit)
summary(simData)
simValues <- function(n = 10000){
theta <- rbinom(n, size = 1, p = 0.01)
y <- rnorm(n) + theta
ans <- data.frame(y = y, theta = theta)
}
postProb <- function(y){
numerator <- 0.01 * dnorm(y - 1)
demon <- numerator + 0.99 * dnorm(y)
return(numerator / demon)
}
simValues <- function(n = 100000){
theta <- rbinom(n, size = 1, p = 0.01)
y <- rnorm(n) + theta
ans <- data.frame(y = y, theta = theta)
}
postProb <- function(y){
numerator <- 0.01 * dnorm(y - 1)
demon <- numerator + 0.99 * dnorm(y)
return(numerator / demon)
}
simData <- simValues()
simData <- simValues()
postProbs <- postProb(simData$y)
thetaIs1 <- simData$theta == 1
l[thetaIs1] <- 0
u[thetaIs1] <- postProbs[thetaIs1]
l[!thetaIs1] <- postProbs[!thetaIs1]
u[thetaIs1] <- 1
l <- numeric()
u <- numeric()
thetaIs1 <- simData$theta == 1
l[thetaIs1] <- 0
u[thetaIs1] <- postProbs[thetaIs1]
l[!thetaIs1] <- postProbs[!thetaIs1]
u[thetaIs1] <- 1
allFit <- ic_np(cbind(l, u))
allFit <- ic_np(cbind(l, u) ~0)
plot(allFit)
thetaIs1 <- simData$theta == 1
l[thetaIs1] <- 0
u[thetaIs1] <- postProbs[thetaIs1]
l[!thetaIs1] <- postProbs[!thetaIs1]
u[!thetaIs1] <- 1
allFit <- ic_np(cbind(l, u) ~0)
plot(allFit)
summary(thetaIs1)
simData <- simValues(10^6)
postProbs <- postProb(simData$y)
l <- numeric()
u <- numeric()
thetaIs1 <- simData$theta == 1
l[thetaIs1] <- 0
u[thetaIs1] <- postProbs[thetaIs1]
l[!thetaIs1] <- postProbs[!thetaIs1]
u[!thetaIs1] <- 1
allFit <- ic_np(cbind(l, u) ~0)
plot(allFit)
lines(c(1, 0), c(1, 0), col = 'red')
lines(c(1, 0), c(0, 1), col = 'red')
allFit <- ic_np(cbind(l, u) ~0)
plot(allFit)
lines(c(1, 0), c(0, 1), col = 'red')
subSet <- postProbs > .95
sum(subSet)
summary(postProbs)
simValues <- function(n = 100000){
theta <- rbinom(n, size = 1, p = 0.1)
y <- rnorm(n) + theta
ans <- data.frame(y = y, theta = theta)
}
postProb <- function(y){
numerator <- 0.1 * dnorm(y - 1)
demon <- numerator + 0.9 * dnorm(y)
return(numerator / demon)
}
library(icenReg)
simData <- simValues(10^6)
postProbs <- postProb(simData$y)
l <- numeric()
u <- numeric()
thetaIs1 <- simData$theta == 1
l[thetaIs1] <- 0
u[thetaIs1] <- postProbs[thetaIs1]
l[!thetaIs1] <- postProbs[!thetaIs1]
u[!thetaIs1] <- 1
allFit <- ic_np(cbind(l, u) ~0)
plot(allFit)
lines(c(1, 0), c(0, 1), col = 'red')
summary(postProbs)
simValues <- function(n = 100000){
theta <- rbinom(n, size = 1, p = 0.1)
y <- rnorm(n) + theta * 1.5
ans <- data.frame(y = y, theta = theta)
}
postProb <- function(y){
numerator <- 0.1 * dnorm(y - 1.5)
demon <- numerator + 0.9 * dnorm(y)
return(numerator / demon)
}
library(icenReg)
simData <- simValues(10^6)
postProbs <- postProb(simData$y)
l <- numeric()
u <- numeric()
thetaIs1 <- simData$theta == 1
l[thetaIs1] <- 0
u[thetaIs1] <- postProbs[thetaIs1]
l[!thetaIs1] <- postProbs[!thetaIs1]
u[!thetaIs1] <- 1
allFit <- ic_np(cbind(l, u) ~0)
plot(allFit)
lines(c(1, 0), c(0, 1), col = 'red')
subSet <- postProbs > .95
length(subSet)
sum(subSet)
subetData <- simData[subSet]
subetData <- simData[subSet,]
subetData <- simData[subSet,]
thetaIs1Sub <- subSetData$theta == 1
subSetData <- simData[subSet,]
thetaIs1Sub <- subSetData$theta == 1
lSub <- numeric()
uSub <- numeric()
postProbsSub <- postProbsSub[subSet]
postProbsSub <- postProbs[subSet]
subFit <- ic_np(cbind(lSub, uSub))
plot(subFit)
lSub[thetaIs1Sub] <- 0
uSub[thetaIs1Sub] <- postProbsSub[thetaIs1Sub]
lSub[!thetaIs1Sub] <- postProbsSub[!thetaIs1Sub]
uSub[!thetaIs1Sub] <- 1
subFit <- ic_np(cbind(lSub, uSub))
plot(subFit)
simData <- simValues(10^7)
postProbs <- postProb(simData$y)
l <- numeric()
u <- numeric()
subSet <- postProbs > .95
subSetData <- simData[subSet,]
postProbsSub <- postProbs[subSet]
thetaIs1Sub <- subSetData$theta == 1
lSub <- numeric()
uSub <- numeric()
lSub[thetaIs1Sub] <- 0
uSub[thetaIs1Sub] <- postProbsSub[thetaIs1Sub]
lSub[!thetaIs1Sub] <- postProbsSub[!thetaIs1Sub]
uSub[!thetaIs1Sub] <- 1
subFit <- ic_np(cbind(lSub, uSub))
plot(subFit)
length(subSet)
sum(subSet)
simValues <- function(n = 100000){
theta <- rbinom(n, size = 1, p = 0.5)
y <- rnorm(n) + theta * 1.5
ans <- data.frame(y = y, theta = theta)
}
postProb <- function(y){
numerator <- 0.5 * dnorm(y - 1.5)
demon <- numerator + 0.5 * dnorm(y)
return(numerator / demon)
}
simData <- simValues(10^7)
postProbs <- postProb(simData$y)
subSet <- postProbs > .95
subSetData <- simData[subSet,]
postProbsSub <- postProbs[subSet]
thetaIs1Sub <- subSetData$theta == 1
lSub <- numeric()
uSub <- numeric()
lSub[thetaIs1Sub] <- 0
uSub[thetaIs1Sub] <- postProbsSub[thetaIs1Sub]
lSub[!thetaIs1Sub] <- postProbsSub[!thetaIs1Sub]
uSub[!thetaIs1Sub] <- 1
subFit <- ic_np(cbind(lSub, uSub))
plot(subFit)
sum(subSet)
summary(postProbsSub)
sum(subSet, type = 'cdf')
sum(subSet,  'cdf')
icenReg:::plot.icenReg_fit()
icenReg:::plot.icenReg_fit
plot(subFit, fun = 'cdf')
lines(c(0,1) c(0,1), col = 'red')
lines(c(0,1), c(0,1), col = 'red')
plot(subFit, fun = 'cdf', xlim = c(0.95, 1),  ylim = c(0.95, 1))
lines(c(0,1), c(0,1), col = 'red')
plot(subFit, fun = 'cdf', xlim = c(0.95, 1),  ylim = c(0.95, 1))
lines(c(0,1), c(0,1), col = 'red')
getwd()
library(icenReg)
args(ic_np)
library(icenReg)
simData <- simDC_weib(n = 500)
simData <- icenReg:::simDC_weib(n = 500)
fit <- ic_sp(cbind(l, u) ~ x1 + x2, data = simData)
fit
args(ic_sp)
makeCtrls_icsp()
fit <- ic_sp(cbind(l, u) ~ x1 + x2, data = simData, model = 'po')
fit
summary(simData)
mean(simData$l == 2)
mean(simData$l == 0)
npfit <- ic_np(simData[, c('l', 'u')])
npfit
?ic_sp
fit <- ic_sp(cbind(l, u) ~ x1 + x2, data = simData, controls = makeCtrls_icsp(maxIter = 100))
fit2 <- ic_sp(cbind(l, u) ~ x1 + x2, data = simData, controls = makeCtrls_icsp(maxIter = 1000))
fit
fit2
plot(fit)
lines(fit2)
plot(fit)
lines(fit2, col = 'red')
fit3 <- ic_sp(cbind(l, u) ~ x1 + x2, data = simData, controls = makeCtrls_icsp(maxIter = 5000))
lines(fit3, col = 'blue')
library(icenReg)
fit3 <- ic_sp(cbind(l, u) ~ x1 + x2, data = simData, controls = makeCtrls_icsp(maxIter = 5000))
fit3 <- ic_sp(cbind(l, u) ~ x1 + x2, data = simData, controls = makeCtrls_icsp(maxIter = 1000))
fit3
fit2
fit3
fit3 <- ic_sp(cbind(l, u) ~ x1 + x2, data = simData, controls = makeCtrls_icsp(maxIter = 5000))
fit3
fit3 <- ic_sp(cbind(l, u) ~ 0, data = simData, controls = makeCtrls_icsp(maxIter = 5000))
fit3
fit3 <- ic_np(cbind(l, u) ~ 0, data = simData)
fit3
fit3 <- ic_sp(cbind(l, u) ~ x1 + x2, data = simData, controls = makeCtrls_icsp(maxIter = 100))
fit1 <- ic_sp(cbind(l, u) ~ x1 + x2, data = simData, controls = makeCtrls_icsp(maxIter = 100))
fit1
fit1 <- ic_sp(cbind(l, u) ~ x1 + x2, data = simData, controls = makeCtrls_icsp(maxIter = 100, baseUpdates = 25))
fit1
fit1 <- ic_sp(cbind(l, u) ~ x1 + x2, data = simData, controls = makeCtrls_icsp(maxIter = 2500, baseUpdates = 1))
fit1
simData <- icenReg:::simDC_weib(n = 100)
fit1 <- ic_sp(cbind(l, u) ~ x1 + x2, data = simData, controls = makeCtrls_icsp(maxIter = 2500, baseUpdates = 1))
data(miceData)
fit <- ic_par(cbind(l, u) ~ grp, data = miceData, dist = 'generalgamma')
fit
ls(fit)
fit$hessian
fit$score
library(icenReg)
data(miceData)
fit <- ic_par(cbind(l, u) ~ grp, data = miceData, dist = 'generalgamma')
fit
library(icenReg)
data(miceData)
fit <- ic_par(cbind(l, u) ~ grp, data = miceData, dist = 'generalgamma')
fit
?pgamma
library(icenReg)
fit <- ic_par(cbind(l, u) ~ grp, data = miceData, dist = 'generalgamma')
fit
simData <- icenReg:::simDC_weib(n = 500)
fit <- ic_par(cbind(l, u) ~ x1 + x2, data = simData)
fit
fit <- ic_par(cbind(l, u) ~ x1 + x2, data = simData, family = 'generalgamma')
fit <- ic_par(cbind(l, u) ~ x1 + x2, data = simData, dist = 'generalgamma')
fit
simValues <- function(n = 100000){
theta <- rbinom(n, size = 1, p = 0.001)
y <- rnorm(n) + theta * 1
ans <- data.frame(y = y, theta = theta)
}
postProb <- function(y){
numerator <- 0.05 * dnorm(y - 1.5)
demon <- numerator + 0.05 * dnorm(y)
return(numerator / demon)
}
library(icenReg)
simData <- simValues(10^7)
postProbs <- postProb(simData$y)
l <- numeric()
u <- numeric()
thetaIs1 <- simData$theta == 1
l[thetaIs1] <- 0
u[thetaIs1] <- postProbs[thetaIs1]
l[!thetaIs1] <- postProbs[!thetaIs1]
u[!thetaIs1] <- 1
allFit <- ic_np(cbind(l, u) ~0)
plot(allFit)
lines(c(1, 0), c(0, 1), col = 'red')
simValues <- function(n = 100000){
theta <- rbinom(n, size = 1, p = 0.01)
y <- rnorm(n) + theta * 1
ans <- data.frame(y = y, theta = theta)
}
postProb <- function(y){
numerator <- 0.05 * dnorm(y - 1.5)
demon <- numerator + 0.05 * dnorm(y)
return(numerator / demon)
}
library(icenReg)
simData <- simValues(10^6)
postProbs <- postProb(simData$y)
l <- numeric()
u <- numeric()
thetaIs1 <- simData$theta == 1
l[thetaIs1] <- 0
u[thetaIs1] <- postProbs[thetaIs1]
l[!thetaIs1] <- postProbs[!thetaIs1]
u[!thetaIs1] <- 1
allFit <- ic_np(cbind(l, u) ~0)
plot(allFit)
lines(c(1, 0), c(0, 1), col = 'red')
simValues <- function(n = 100000, pt1 = 0.01){
theta <- rbinom(n, size = 1, p = pt1)
y <- rnorm(n) + theta * 1
ans <- data.frame(y = y, theta = theta)
}
postProb <- function(y, pt1 = 0.01){
numerator <- pt1 * dnorm(y - 1)
demon <- numerator + (1 - pt1) * dnorm(y)
return(numerator / demon)
}
library(icenReg)
simData <- simValues(10^6)
postProbs <- postProb(simData$y)
l <- numeric()
u <- numeric()
thetaIs1 <- simData$theta == 1
l[thetaIs1] <- 0
u[thetaIs1] <- postProbs[thetaIs1]
l[!thetaIs1] <- postProbs[!thetaIs1]
u[!thetaIs1] <- 1
allFit <- ic_np(cbind(l, u) ~0)
plot(allFit)
lines(c(1, 0), c(0, 1), col = 'red')
allFit <- ic_np(cbind(l, u) ~0)
plot(allFit, fun = 'cdf')
lines(c(0, 1), c(0, 1), col = 'red')
simData <- simValues(10^6, .1)
postProbs <- postProb(simData$y, .1)
l <- numeric()
u <- numeric()
thetaIs1 <- simData$theta == 1
l[thetaIs1] <- 0
u[thetaIs1] <- postProbs[thetaIs1]
l[!thetaIs1] <- postProbs[!thetaIs1]
u[!thetaIs1] <- 1
allFit <- ic_np(cbind(l, u) ~0)
plot(allFit, fun = 'cdf')
lines(c(0, 1), c(0, 1), col = 'red')
simData <- simValues(10^6, .01)
postProbs <- postProb(simData$y, .1)
l <- numeric()
u <- numeric()
thetaIs1 <- simData$theta == 1
l[thetaIs1] <- 0
u[thetaIs1] <- postProbs[thetaIs1]
l[!thetaIs1] <- postProbs[!thetaIs1]
u[!thetaIs1] <- 1
allFit <- ic_np(cbind(l, u) ~0)
plot(allFit, fun = 'cdf')
lines(c(0, 1), c(0, 1), col = 'red')
simData <- simValues(10^6, .2)
postProbs <- postProb(simData$y, .1)
l <- numeric()
u <- numeric()
thetaIs1 <- simData$theta == 1
l[thetaIs1] <- 0
u[thetaIs1] <- postProbs[thetaIs1]
l[!thetaIs1] <- postProbs[!thetaIs1]
u[!thetaIs1] <- 1
allFit <- ic_np(cbind(l, u) ~0)
plot(allFit, fun = 'cdf')
lines(c(0, 1), c(0, 1), col = 'red')
system.time(rbeta(10^6, 3, 3))
system.time(rnorm(10^6))
system.time(rbeta(10^6, 3.2, 1))
system.time(rexp(10^6))
system.time(rbeta(10^6, 3.2, 1))
system.time(rweibull(10^6, 3, 3))
system.time(rweibull(10^6, 3.2, 3.2))
system.time(rgamma(10^6, 3.2, 3.2))
?rweibull
system.time(rbeta(10^6, 15, 15))
system.time(rpois(10^6, 100))
system.time(rt(10^6, 10))
system.time(rt(10^6, 100))
system.time(df(10^6, 100, 100))
system.time(df(10^6, 10, 10))
df(10, 10, 10)
?df
system.time(rf(10^6, 10, 10))
system.time(rf(10^6, 100, 100))
system.time(rf(10^6, 500, 100))
args(dhyper)
system.time(rhyper(10^6, 100, 100, 100))
system.time(rhyper(10^6, 1000, 1000, 1000))
setwd("~/Desktop/icenReg_devel/Code/icenReg copy")
setwd("~/Desktop/icenReg_devel/Code/icenReg")
library(roxygen2)
roxygenize()
roxygenize()
roxygenize()
roxygenize()
library(icenReg)
data(miceData)
fit <- ic_par(cbind(l, u) ~ grp, data = miceData, dist = 'generalGamma')
?fit_par
?ic_par
fit <- ic_par(cbind(l, u) ~ grp, data = miceData, dist = 'generalgamma')
fit
5^10
library(icenReg)
fit <- ic_par(cbind(l, u) ~ grp, data = miceData, dist = 'generalGamma')
fit <- ic_par(cbind(l, u) ~ grp, data = miceData, dist = 'generalgamma')
fit
